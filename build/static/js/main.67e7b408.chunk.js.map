{"version":3,"sources":["App.js","components/case.jsx","components/board.jsx","components/resetBtn.jsx","components/joinBtn.jsx","components/createBtn.jsx","components/currentPlayer.jsx","components/score.jsx","components/gameInfo.jsx","reportWebVitals.js","index.js"],"names":["Case","this","props","onPlay","caseInfo","className","onClick","case","status","Component","Board","size","board","i","push","id","map","caseInBoard","index","ResetBtn","state","onReset","JoinBtn","type","name","value","gameId","onChange","onJoin","CreateBtn","onCreate","CurrentPlayer","player","clientId","Score","score","GameInfo","players","position","socket","io","App","gameOver","sign","currentPlayer","handleOnPlay","gotWinner","some","cell","emit","handleJoin","joinInfo","handleCreate","game","handleReset","handleGameIdChange","e","setState","target","on","userId","console","log","clients","find","client","length","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67e7b408.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport Board from './components/board';\nimport ResetBtn from './components/resetBtn';\nimport JoinBtn from './components/joinBtn';\nimport CreateBtn from './components/createBtn';\nimport CurrentPlayer from './components/currentPlayer';\nimport GameInfo from './components/gameInfo';\n\nconst size = 9;\nlet board = [];\nfor(let i = 0; i < size; i++) {\n  board.push({position: i, status: \"available\"})\n}\n\n//const socket = io('http://localhost:1337');\nconst socket = io('https://tic-tac-toe-react-multi.herokuapp.com');\n\n\nclass App extends Component {\n  state = { \n    clientId: \"\",\n    gameId: \"\",\n    caseInfo: board,\n    gameOver: false,\n    players: [],\n    sign: \"#\",\n    currentPlayer: \"\"\n  }\n\n  handleOnPlay = (caseInfo) => {\n    let board = [...this.state.caseInfo];\n    if(!this.state.gameOver && this.state.currentPlayer === this.state.clientId && \n      board[caseInfo.position].status === \"available\") {\n      \n      board[caseInfo.position].status = this.state.sign;\n\n      const checkIfOneIsAvailable = cell => cell.status === \"available\";\n\n      let gameOver = this.state.gameOver;\n      let gotWinner = false;\n      if (\n      (board[0].status === board[1].status && board[1].status === board[2].status && board[0].status !== \"available\") ||\n      (board[3].status === board[4].status && board[4].status === board[5].status && board[3].status !== \"available\") ||\n      (board[6].status === board[7].status && board[7].status === board[8].status && board[6].status !== \"available\") ||\n\n      (board[0].status === board[3].status && board[3].status === board[6].status && board[0].status !== \"available\") ||\n      (board[1].status === board[4].status && board[4].status === board[7].status && board[1].status !== \"available\") ||\n      (board[2].status === board[5].status && board[5].status === board[8].status && board[2].status !== \"available\") ||\n\n      (board[0].status === board[4].status && board[4].status === board[8].status && board[0].status !== \"available\") ||\n      (board[2].status === board[4].status && board[4].status === board[6].status && board[2].status !== \"available\") \n      ) {\n        gameOver = true;\n        gotWinner = true;\n      } else if (!this.state.caseInfo.some(checkIfOneIsAvailable)) {\n        gameOver = true;\n      }\n      const {clientId, gameId, currentPlayer, players} = this.state;\n      let state = {clientId, gameId, board, gameOver, currentPlayer, players, gotWinner};\n\n      socket.emit('play', state);\n      }\n  }\n\n  handleJoin = () => {\n    const {gameId, clientId} = this.state;\n    /*if(gameId === \"\") {\n      //prendre la value de l'input\n    }*/\n    const joinInfo = {\n      clientId,\n      gameId\n    }\n    socket.emit('join', joinInfo);\n  }\n\n  handleCreate = () => {\n    const {clientId} = this.state;\n    const game = {\n      clientId,\n      board\n    }\n    socket.emit('create', game);\n  }\n\n  handleReset = () => {\n    let board = [];\n    for(let i = 0; i < size; i++) {\n      board.push({position: i, status: \"available\"})\n    }\n\n    let state = {gameId: this.state.gameId, board, gameOver: false};\n\n    socket.emit('reset', state);\n  }\n\n  handleGameIdChange = (e) => {\n    this.setState({\n        gameId: e.target.value\n    });\n  }\n\n  componentDidMount(){\n    socket.on('play', (state) => {\n      this.setState({ caseInfo: state.board, gameOver: state.gameOver, currentPlayer: state.currentPlayer, players: state.players })\n    });\n\n    socket.on('reset', (state) => {\n      this.setState({ caseInfo: state.board, gameOver: state.gameOver })\n    });\n    \n    socket.on('clientConnect', (userId) => {\n      this.setState({ clientId: userId })\n      console.log(`Client ${userId} has connected`)\n    });\n\n    socket.on('create', (game) => {\n      this.setState({ gameId: game.id, caseInfo: game.board})\n      console.log(`Game ${game.id} has been created`)\n    });\n\n    socket.on('join', (game) => {\n      const player = game.clients.find(client => client.clientId === this.state.clientId);\n      console.log(`${game.clients[game.clients.length-1].clientId} joined game ${game.id}`)\n      \n      this.setState({ sign: player.sign, players: game.clients, currentPlayer: game.currentPlayer })\n    });\n  }\n\n  render() { \n    return ( \n    <React.Fragment>\n      <h1>Tic-tac-toe</h1>\n      <div id=\"gameTitle\">Game ID: {this.state.gameId}</div>\n    \n      <GameInfo players={this.state.players} clientId={this.state.clientId} />\n      <CreateBtn onCreate={this.handleCreate} />\n      <JoinBtn onJoin={this.handleJoin} onChange={this.handleGameIdChange} gameId={this.state.gameId} />\n      {this.state.players.length === 2 ? \n      <React.Fragment>\n        <Board size={9} onPlay={this.handleOnPlay} caseInfo={this.state.caseInfo} />\n        {!this.state.gameOver && <CurrentPlayer player={this.state.currentPlayer} clientId={this.state.clientId} />}\n      </React.Fragment>: \n      this.state.players.length === 1 &&\n      <div id=\"waitingMsg\">Waiting for another player</div>} \n      {this.state.gameOver && <ResetBtn onReset={this.handleReset}/>}\n    </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\n\r\nclass Case extends Component {\r\n    render() {\r\n        const {onPlay, caseInfo} = this.props\r\n        return ( \r\n            <div className=\"case\" onClick={() => { onPlay(caseInfo) }} case={caseInfo.status}>\r\n                {caseInfo.status !== \"available\" && caseInfo.status}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Case;","import React, { Component } from 'react';\r\nimport Case from './case';\r\n\r\nclass Board extends Component {\r\n    render() { \r\n        const {size, onPlay, caseInfo} = this.props;\r\n        let board = [];\r\n        for (let i=0; i<size; i++) {\r\n            board.push(i);\r\n        }\r\n\r\n        return ( \r\n            <div id=\"board\">\r\n                {board.map((caseInBoard, index) => (\r\n                    <Case key={index} onPlay={onPlay} caseInfo={caseInfo[index]} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\n\r\nclass ResetBtn extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div id=\"btnContainer\">\r\n                <button id=\"resetBtn\" onClick={this.props.onReset}>Reset</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ResetBtn;","import React, { Component } from 'react';\r\n\r\nclass JoinBtn extends Component {\r\n\r\n    render() { \r\n        \r\n        return ( \r\n            <div id=\"btnContainer\">\r\n                \r\n                    <label>Game Id</label>\r\n                    <input type='text' id= 'gameId' name='gameId' value={this.props.gameId} onChange={this.props.onChange} />\r\n                    <button id=\"joinBtn\" onClick={this.props.onJoin}>Join</button>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default JoinBtn;","import React, { Component } from 'react';\r\n\r\nclass CreateBtn extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div id=\"btnContainer\">\r\n            <button id=\"createBtn\" onClick={this.props.onCreate}>Create a new game</button>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default CreateBtn;","import React, { Component } from 'react';\r\n\r\nclass CurrentPlayer extends Component {\r\n    \r\n    render() { \r\n        const {player, clientId} = this.props;\r\n        return ( \r\n            <div className=\"currentPlayer\">\r\n                {player === clientId ? 'You are' : 'Opponent is'} playing\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrentPlayer;","import React, { Component } from 'react';\r\n\r\nclass Score extends Component {\r\n\r\n    render() { \r\n        const {clientId, player} = this.props\r\n        return ( \r\n            <div>\r\n                {player.clientId === clientId ? 'You' : 'Opponent'}: {player.score} \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Score;","import React, { Component } from 'react';\r\nimport Score from './score';\r\n\r\nclass GameInfo extends Component {\r\n\r\n    render() { \r\n        const {players, clientId} = this.props;\r\n        return ( \r\n            <div className=\"gameInfo\">\r\n                {players.map((player, index) => (\r\n                    <Score key={index} player={player} clientId={clientId}/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameInfo;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}